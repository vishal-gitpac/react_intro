{"ast":null,"code":"var _jsxFileName = \"/Users/vishalsmac/Documents/web development/react intro/my-app/src/components/User.js\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Link, Route, Routes } from \"react-router-dom\";\nimport { Faq } from \"./Faq\";\nimport { RqFaq } from \"./RQFaq\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet cnt = 1;\nexport const User = () => {\n  /*const [todo, settodo] = useState([{ sub: \"maths\", id: 0 }]);\n  const [task, settask] = useState(\"\");\n  function addtask() {\n    settodo((oldtodo) => {\n      //runs synchronously so task does not become empty before adding to todo\n      settask(\"\");\n      return [...oldtodo, { sub: task, id: cnt++ }];\n    });\n    //...includes all old elements of oldtodo\n    //whenever the new otuput depends on input it is better to use function as value\n  }\n  function deltask(pa) {\n    const newtodo = todo.filter((b) => b.id !== pa);\n    settodo(newtodo);\n    //settodo(oldtodo=>oldtodo.filter((b)=>b.id!==pa)) is not working it is deleting the whole list\n    //.. so a new array is assigned and then set\n  }\n  function addwhenenter(e) {\n    if (e.keyCode === 13) {\n      addtask();\n    }\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hloo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","BrowserRouter","Link","Route","Routes","Faq","RqFaq","cnt","User"],"sources":["/Users/vishalsmac/Documents/web development/react intro/my-app/src/components/User.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter, Link, Route, Routes } from \"react-router-dom\";\n\nimport { Faq } from \"./Faq\";\nimport { RqFaq } from \"./RQFaq\";\n\nlet cnt = 1;\n\nexport const User = () => {\n  /*const [todo, settodo] = useState([{ sub: \"maths\", id: 0 }]);\n  const [task, settask] = useState(\"\");\n  function addtask() {\n    settodo((oldtodo) => {\n      //runs synchronously so task does not become empty before adding to todo\n      settask(\"\");\n      return [...oldtodo, { sub: task, id: cnt++ }];\n    });\n    //...includes all old elements of oldtodo\n    //whenever the new otuput depends on input it is better to use function as value\n  }\n  function deltask(pa) {\n    const newtodo = todo.filter((b) => b.id !== pa);\n    settodo(newtodo);\n    //settodo(oldtodo=>oldtodo.filter((b)=>b.id!==pa)) is not working it is deleting the whole list\n    //.. so a new array is assigned and then set\n  }\n  function addwhenenter(e) {\n    if (e.keyCode === 13) {\n      addtask();\n    }\n  }*/\n  return (\n    <div>\n      {/*\n      <BrowserRouter>\n        <div className=\"header2\">\n          <div className=\"header1\">my portfolio</div>\n        </div>\n        <div className=\"comp\">\n          <Link to=\"/\">Home</Link>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <div className=\"whole\">\n                  <div className=\"headers\">\n                    <h1 className=\"header\">TO DO LIST</h1>\n                  </div>\n                  <input\n                    onKeyDown={addwhenenter}\n                    type=\"text\"\n                    //value attribute of input tag in react works only with usestate or else they stay static with defaulot value given\n                    value={task}\n                    onChange={(event) => {\n                      settask(event.target.value);\n                    }}\n                    className=\"input-task\"\n                  />\n                  <button onClick={addtask}>add</button>\n                  <div className=\"todo-cont\">\n                    <ul className=\"list\">\n                      {todo\n                        ? todo.map((dt) => {\n                            return (\n                              <div className=\"todo-container\" key={dt.id}>\n                                <div className=\"todo\">\n                                  <div className=\"task\">\n                                    <input type=\"checkbox\" />\n                                    {dt.sub}\n                                  </div>\n                                  <button\n                                    onClick={() => deltask(dt.id)}\n                                    className=\"rm-btn\"\n                                  >\n                                    remove\n                                  </button>\n                                </div>\n                              </div>\n                            );\n                          })\n                        : \"loading\"}\n                    </ul>\n                  </div>\n                </div>\n              }\n            />\n          </Routes>\n          <div className=\"FAQ\">\n            <Link to=\"/faq\">\n              <h1>FAQ</h1>\n            </Link>\n            <Link to=\"/rqfaq\">\n              <h1>RQFAQ</h1>\n            </Link>\n            <Routes>\n              <Route\n                path=\"/faq\"\n                element={\n                  // {data.map((ar) => {\n                  //     return <Ques title={ar.title} key={ar.id} info={ar.info} />;\n                  //   })}\n                  <div>\n                    <Faq />\n                  </div>\n                }\n                exact\n              />\n              <Route\n                path=\"/rqfaq\"\n                element={\n                  // {data.map((ar) => {\n                  //     return <Ques title={ar.title} key={ar.id} info={ar.info} />;\n                  //   })}\n                  <div>\n                    <RqFaq />\n                  </div>\n                }\n                exact\n              />\n            </Routes>\n          </div>\n          <div className=\"footer\">\n            <p>About me , </p>I am Vishal, studying at iiitdm kancheepuram\n          </div>\n        </div>\n      </BrowserRouter> \n      */}\n      hloo\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAErE,SAASC,GAAG,QAAQ,OAAO;AAC3B,SAASC,KAAK,QAAQ,SAAS;AAAC;AAEhC,IAAIC,GAAG,GAAG,CAAC;AAEX,OAAO,MAAMC,IAAI,GAAG,MAAM;EACxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAgGM;AAEV,CAAC;AAAC,KA1HWA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}